<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="6" hostname="JSAMateBookD15" failures="1" tests="1" name="Default test" time="1.529" errors="0" timestamp="2024-01-25T11:07:08 IST">
  <testcase classname="restdoc.c02.Examples" name="jsonExampleSchemaValidation" time="1.487">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Response body doesn&amp;apos;t match expectation.
Expected: The content to match the given JSON schema.
error: instance type (array) does not match any allowed primitive type (allowed: [&amp;quot;object&amp;quot;])
    level: &amp;quot;error&amp;quot;
    schema: {&amp;quot;loadingURI&amp;quot;:&amp;quot;file:/D:/workspaces/github-local/sal-restassured-getting-started/target/test-classes/books.json#&amp;quot;,&amp;quot;pointer&amp;quot;:&amp;quot;&amp;quot;}
    instance: {&amp;quot;pointer&amp;quot;:&amp;quot;&amp;quot;}
    domain: &amp;quot;validation&amp;quot;
    keyword: &amp;quot;type&amp;quot;
    found: &amp;quot;array&amp;quot;
    expected: [&amp;quot;object&amp;quot;]

  Actual: [
  {
    &amp;quot;author&amp;quot;: &amp;quot;Nigel Rees&amp;quot;,
    &amp;quot;category&amp;quot;: &amp;quot;reference&amp;quot;,
    &amp;quot;price&amp;quot;: 8.95,
    &amp;quot;title&amp;quot;: &amp;quot;Sayings of the Century&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;88a1&amp;quot;
  },
  {
    &amp;quot;author&amp;quot;: &amp;quot;Evelyn Waugh&amp;quot;,
    &amp;quot;category&amp;quot;: &amp;quot;fiction&amp;quot;,
    &amp;quot;price&amp;quot;: 12.99,
    &amp;quot;title&amp;quot;: &amp;quot;Sword of Honour&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;35f3&amp;quot;
  },
  {
    &amp;quot;author&amp;quot;: &amp;quot;Herman Melville&amp;quot;,
    &amp;quot;category&amp;quot;: &amp;quot;fiction&amp;quot;,
    &amp;quot;isbn&amp;quot;: &amp;quot;0-5.4.01311-3&amp;quot;,
    &amp;quot;price&amp;quot;: 8.99,
    &amp;quot;title&amp;quot;: &amp;quot;Moby Dick&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;dbe7&amp;quot;
  },
  {
    &amp;quot;author&amp;quot;: &amp;quot;J. R. R. Tolkien&amp;quot;,
    &amp;quot;category&amp;quot;: &amp;quot;fiction&amp;quot;,
    &amp;quot;isbn&amp;quot;: &amp;quot;0-395-19395-8&amp;quot;,
    &amp;quot;price&amp;quot;: 22.99,
    &amp;quot;title&amp;quot;: &amp;quot;The Lord of the Rings&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;a0a4&amp;quot;
  }
]
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (array) does not match any allowed primitive type (allowed: ["object"])
    level: "error"
    schema: {"loadingURI":"file:/D:/workspaces/github-local/sal-restassured-getting-started/target/test-classes/books.json#","pointer":""}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "array"
    expected: ["object"]

  Actual: [
  {
    "author": "Nigel Rees",
    "category": "reference",
    "price": 8.95,
    "title": "Sayings of the Century",
    "id": "88a1"
  },
  {
    "author": "Evelyn Waugh",
    "category": "fiction",
    "price": 12.99,
    "title": "Sword of Honour",
    "id": "35f3"
  },
  {
    "author": "Herman Melville",
    "category": "fiction",
    "isbn": "0-5.4.01311-3",
    "price": 8.99,
    "title": "Moby Dick",
    "id": "dbe7"
  },
  {
    "author": "J. R. R. Tolkien",
    "category": "fiction",
    "isbn": "0-395-19395-8",
    "price": 22.99,
    "title": "The Lord of the Rings",
    "id": "a0a4"
  }
]

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at restdoc.c02.Examples.jsonExampleSchemaValidation(Examples.java:96)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- jsonExampleSchemaValidation -->
  <testcase classname="restdoc.c02.Examples" name="jsonExampleSchemaValidationSettings" time="0.0">
    <ignored/>
  </testcase> <!-- jsonExampleSchemaValidationSettings -->
  <testcase classname="restdoc.c02.Examples" name="jsonExampleEqualTo" time="0.0">
    <ignored/>
  </testcase> <!-- jsonExampleEqualTo -->
  <testcase classname="restdoc.c02.Examples" name="jsonExampleHasItems" time="0.0">
    <ignored/>
  </testcase> <!-- jsonExampleHasItems -->
  <testcase classname="restdoc.c02.Examples" name="jsonExample" time="0.0">
    <ignored/>
  </testcase> <!-- jsonExample -->
  <testcase classname="restdoc.c02.Examples" name="jsonExampleConfigureFloatsAndDoublesAsBigDecimal" time="0.0">
    <ignored/>
  </testcase> <!-- jsonExampleConfigureFloatsAndDoublesAsBigDecimal -->
  <testcase classname="restdoc.c02.Examples" name="jsonExampleFloatsAndDoublesAsBigDecimal" time="0.0">
    <ignored/>
  </testcase> <!-- jsonExampleFloatsAndDoublesAsBigDecimal -->
</testsuite> <!-- Default test -->
